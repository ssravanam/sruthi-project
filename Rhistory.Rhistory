ylab("Community Evenness") +
theme_q2r() +
scale_fill_manual(values=c("cornflowerblue","indianred")) + #specify custom colors
theme(legend.position="none") + #remove the legend as it isn't needed
ggsave("evenness.pdf", height=3, width=4, device="pdf") # save a PDF 3 inches by 4 inches
mymetadata<-
mymetadata %>%
left_join(shannon)
mymetadata %>%
filter(!is.na(shannon)) %>%
ggplot(aes(x=`Donor-status`, y=shannon, fill=`Donor-status`)) +
stat_summary(geom="bar", fun.data=mean_se, color="black") + #here black is the outline for the bars
coord_cartesian(ylim=c(2,7)) + # adjust y-axis
facet_grid(~'Shannon diversity index across the four clinical groups') + # create a panel for each body site
xlab("Four clinical groups") +
ylab("Shannon Diversity") +
theme_q2r() +
scale_fill_manual(values=c("cornflowerblue","indianred")) + #specify custom colors
theme(legend.position="none") +  #remove the legend as it isn't needed
ggsave("Shannon_diversity.pdf", height=3, width=4, device="pdf") # save a PDF 3 inches by 4 inches
mymetadata<-
mymetadata %>%
left_join(shannon)
mymetadata %>%
filter(!is.na(shannon)) %>%
ggplot(aes(x=`Donor-status`, y=shannon, fill=`Donor-status`)) +
stat_summary(geom="bar", fun.data=mean_se, color="black") + #here black is the outline for the bars
coord_cartesian(ylim=c(2,7)) + # adjust y-axis
xlab("Four clinical groups") +   facet_grid(~'Shannon diversity index')
ylab("Shannon Diversity") +
theme_q2r() +
scale_fill_manual(values=c("cornflowerblue","indianred")) + #specify custom colors
theme(legend.position="none") +  #remove the legend as it isn't needed
ggsave("Shannon_diversity.pdf", height=3, width=4, device="pdf") # save a PDF 3 inches by 4 inches
faithpd<-read_qza("qzv/alphadiversity/faith_pd_vector.qza")
faithpd<-faithpd$data %>% rownames_to_column("SampleID")
gplots::venn(list(metadata=mymetadata$SampleID, faithpd-faithpd$SampleID))
ggsave("vennfaithpd", height=4, width=4, device = pdf)
faithpd<-read_qza("qzv/alphadiversity/faith_pd_vector.qza")
faithpd<-faithpd$data %>% rownames_to_column("SampleID")
gplots::venn(list(metadata=mymetadata$SampleID, faithpd=faithpd$SampleID))
ggsave("vennfaithpd", height=4, width=4, device = pdf)
View(mymetadata)
mymetadata<-
mymetadata %>%
left_join(faithpd)
mymetadata %>%
filter(!is.na(faithpd))
View(mymetadata)
mymetadata<-
mymetadata %>%
left_join(faithpd)
mymetadata %>%
filter(!is.na(faithpd)) %>%
ggplot(aes(x=`Donor-status`, y=faithpd, fill=`Donor-status`)) +
stat_summary(geom="bar", fun.data=mean_se, color="black") + #here black is the outline for the bars
coord_cartesian(ylim=c(3,17)) + # adjust y-axis
xlab("Four clinical groups") + facet_grid(~'Faith phylogenetic diversity')
ylab("Faith PD") +
theme_q2r() +
scale_fill_manual(values=c("cornflowerblue","indianred")) + #specify custom colors
theme(legend.position="none") + #remove the legend as it isn't needed
ggsave("faithpd.pdf", height=3, width=4, device="pdf") # save a PDF 3 inches by 4 inches
mymetadata<-
mymetadata %>%
left_join(faithpd)
mymetadata %>%
filter(!is.na(faithpd)) %>%
ggplot(aes(x=`Donor-status`, y=faithpd, fill=`Donor-status`)) +
stat_summary(geom="bar", fun.data=mean_se, color="black") + #here black is the outline for the bars
coord_cartesian(ylim=c(3,17)) + # adjust y-axis
xlab("Four clinical groups") + facet_grid(~'Faith phylogenetic diversity') +
ylab("Faith PD") +
theme_q2r() +
scale_fill_manual(values=c("cornflowerblue","indianred")) + #specify custom colors
theme(legend.position="none") + #remove the legend as it isn't needed
ggsave("faithpd.pdf", height=3, width=4, device="pdf") # save a PDF 3 inches by 4 inches
mymetadata<-
mymetadata %>%
left_join(faithpd)
mymetadata %>%
filter(!is.na(faithpd)) %>%
ggplot(aes(x=`Donor-status`, y=faithpd, fill=`Donor-status`)) +
stat_summary(geom="bar", fun.data=mean_se, color="black") + #here black is the outline for the bars
coord_cartesian(ylim=c(3,20)) + # adjust y-axis
xlab("Four clinical groups") + facet_grid(~'Faith phylogenetic diversity') +
ylab("Faith PD") +
theme_q2r() +
scale_fill_manual(values=c("cornflowerblue","indianred")) + #specify custom colors
theme(legend.position="none") + #remove the legend as it isn't needed
ggsave("faithpd.pdf", height=3, width=4, device="pdf") # save a PDF 3 inches by 4 inches
View(mymetadata)
mymetadata<-
mymetadata %>%
left_join(faithpd)
mymetadata %>%
filter(!is.na(faithpd)) %>%
ggplot(aes(x=`Donor-status`, y=faithpd, fill=`Donor-status`)) +
stat_summary(geom="bar", fun.data=mean_se, color="black") + #here black is the outline for the bars
coord_cartesian(ylim=c(1,25)) + # adjust y-axis
xlab("Four clinical groups") + facet_grid(~'Faith phylogenetic diversity') +
ylab("Faith PD") +
theme_q2r() +
scale_fill_manual(values=c("cornflowerblue","indianred")) + #specify custom colors
theme(legend.position="none") + #remove the legend as it isn't needed
ggsave("faithpd.pdf", height=3, width=4, device="pdf") # save a PDF 3 inches by 4 inches
rlang::last_error()
mymetadata<-
mymetadata %>%
left_join(faithpd)
mymetadata %>%
filter(!is.na(faithpd)) %>%
ggplot(aes(x=`Donor-status`, y=faithpd, fill=`Donor-status`)) +
stat_summary(geom="bar", fun.data=mean_se, color="black") + #here black is the outline for the bars
coord_cartesian(ylim=c(1,25)) + # adjust y-axis
xlab("Four clinical groups") + facet_grid(~'Faith phylogenetic diversity') +
ylab("Faith PD") +
theme_q2r() +
scale_fill_manual(values=c("cornflowerblue","indianred")) + #specify custom colors
theme(legend.position="none") + #remove the legend as it isn't needed
l
mymetadata %>%
left_join(faithpd)
mymetadata %>%
filter(!is.na(faithpd)) %>%
ggplot(aes(x=`Donor-status`, y=faithpd, fill=`Donor-status`)) +
stat_summary(geom="bar", fun.data=mean_se, color="black") + #here black is the outline for the bars
coord_cartesian(ylim=c(1,25)) + # adjust y-axis
xlab("Four clinical groups") + facet_grid(~'Faith phylogenetic diversity') +
ylab("Faith PD") +
theme_q2r() +
scale_fill_manual(values=c("cornflowerblue","indianred")) + #specify custom colors
theme(legend.position="none")  #remove the legend as it isn't needed
mymetadata<-
mymetadata %>%
left_join(faithpd)
mymetadata %>%
filter(!is.na(faithpd)) %>%
ggplot(aes(x=`Donor-status`, y=faithpd, fill=`Donor-status`)) +
stat_summary(geom="bar", fun.data=mean_se, color="black") + #here black is the outline for the bars
coord_cartesian(ylim=c(2,7)) + # adjust y-axis
xlab("Four clinical groups") + facet_grid(~'Faith phylogenetic diversity') +
ylab("Faith PD") +
theme_q2r() +
scale_fill_manual(values=c("cornflowerblue","indianred")) + #specify custom colors
theme(legend.position="none")+  #remove the legend as it isn't needed
ggsave("faithpd.pdf", height=3, width=4, device="pdf") # save a PDF 3 inches by 4 inches
mymetadata<-
mymetadata %>%
left_join(faithpd)
mymetadata %>%
filter(!is.na(faithpd)) %>%
ggplot(aes(x=`Donor-status`, y=faithpd, fill=`Donor-status`)) +
stat_summary(geom="bar", fun.data=mean_se, color="black") + #here black is the outline for the bars
coord_cartesian(ylim=c(3,20)) + # adjust y-axis
xlab("Four clinical groups") + facet_grid(~'Faith phylogenetic diversity')
ylab("Faith PD") +
theme_q2r() +
scale_fill_manual(values=c("cornflowerblue","indianred")) + #specify custom colors
theme(legend.position="none")+  #remove the legend as it isn't needed
ggsave("faithpd.pdf", height=3, width=4, device="pdf") # save a PDF 3 inches by 4 inches
mymetadata<-
mymetadata %>%
left_join(pielou_e)
mymetadata %>%
filter(!is.na(pielou_e)) %>%
ggplot(aes(x=`Donor-status`, y=pielou_e, fill=`Donor-status`)) +
stat_summary(geom="bar", fun.data=mean_se, color="black") + #here black is the outline for the bars
coord_cartesian(ylim=c(0.50,0.95)) + # adjust y-axis
xlab("Four clinical groups") + facet_grid(~'Community evenness-pielou')
ylab("Community Evenness") +
theme_q2r() +
scale_fill_manual(values=c("cornflowerblue","indianred")) + #specify custom colors
theme(legend.position="none") + #remove the legend as it isn't needed
ggsave("evenness.pdf", height=3, width=4, device="pdf") # save a PDF 3 inches by 4 inches
mymetadata<-
mymetadata %>%
left_join(faithpd)
mymetadata %>%
filter(!is.na(faithpd)) %>%
ggplot(aes(x=`Donor-status`, y=faithpd, fill=`Donor-status`)) +
stat_summary(geom="bar", fun.data=mean_se, color="black") + #here black is the outline for the bars
coord_cartesian(ylim=c(3,20)) + # adjust y-axis
xlab("Four clinical groups") + facet_grid(~'Faith phylogenetic diversity')
ylab("Faith PD") +
theme_q2r() +
scale_fill_manual(values=c("cornflowerblue","indianred")) + #specify custom colors
theme(legend.position="none")+  #remove the legend as it isn't needed
ggsave("faithpd.pdf", height=3, width=4, device="pdf") # save a PDF 3 inches by 4 inches
View(mymetadata)
mymetadata<-
mymetadata %>%
left_join(faithpd)
mymetadata %>%
filter(!is.na(faithpd)) %>%
ggplot(aes(x=`Donor-status`, y=faithpd, fill=`Donor-status`)) +
stat_summary(geom="bar", fun.data=mean_se, color="black") + #here black is the outline for the bars
coord_cartesian(ylim=c(3.00,20.11)) + # adjust y-axis
xlab("Four clinical groups") + facet_grid(~'Faith phylogenetic diversity')
ylab("Faith PD") +
theme_q2r() +
scale_fill_manual(values=c("cornflowerblue","indianred")) + #specify custom colors
theme(legend.position="none")+  #remove the legend as it isn't needed
ggsave("faithpd.pdf", height=3, width=4, device="pdf") # save a PDF 3 inches by 4 inches
mymetadata<-
mymetadata %>%
left_join(faithpd)
mymetadata %>%
filter(!is.na(faithpd)) %>%
ggplot(aes(x=`Donor-status`, y=faithpd, fill=`Donor-status`)) +
stat_summary(geom="bar", fun.data=mean_se, color="black") + #here black is the outline for the bars
coord_cartesian(ylim=c(3,20)) + # adjust y-axis
xlab("Four clinical groups") + facet_grid(~'Faith phylogenetic diversity')
ylab("Faith PD") +
theme_q2r() +
scale_fill_manual(values=c("cornflowerblue","indianred")) + #specify custom colors
theme(legend.position="none")+  #remove the legend as it isn't needed
ggsave("faithpd.pdf", height=3, width=4, device="pdf") # save a PDF 3 inches by 4 inches
rlang::last_error()
mymetadata<-
mymetadata %>%
left_join(faithpd)
mymetadata %>%
filter(!is.na(faithpd)) %>%
ggplot(aes(x=`Donor-status`, y=faithpd, fill=`Donor-status`)) +
stat_summary(geom="bar", fun.data=mean_se, color="black") + #here black is the outline for the bars
coord_cartesian(ylim=c(3,20)) + # adjust y-axis
xlab("Four clinical groups") + facet_grid(~'Faith phylogenetic diversity')
ylab("Faith PD") +
theme_q2r() +
scale_fill_manual(values=c("cornflowerblue","indianred")) + #specify custom colors
theme(legend.position="none")+  #remove the legend as it isn't need
l
mymetadata<-
mymetadata %>%
left_join(faithpd)
mymetadata %>%
filter(!is.na(faithpd)) %>%
ggplot(aes(x=`Donor-status`, y=faithpd, fill=`Donor-status`)) +
stat_summary(geom="bar", fun.data=mean_se, color="black") + #here black is the outline for the bars
coord_cartesian(ylim=c(3,20)) + # adjust y-axis
xlab("Four clinical groups") + facet_grid(~'Faith phylogenetic diversity')
ylab("Faith PD") +
theme_q2r() +
scale_fill_manual(values=c("cornflowerblue","indianred")) + #specify custom colors
theme(legend.position="none")
rlang::last_error()
mymetadata<-
mymetadata %>%
left_join(faithpd)
mymetadata %>%
filter(!is.na(faithpd)) %>%
ggplot(aes(x=`Donor-status`, y=faith_pd, fill=`Donor-status`)) +
stat_summary(geom="bar", fun.data=mean_se, color="black") + #here black is the outline for the bars
coord_cartesian(ylim=c(3,20)) + # adjust y-axis
xlab("Four clinical groups") + facet_grid(~'Faith phylogenetic diversity')
ylab("Faith PD") +
theme_q2r() +
scale_fill_manual(values=c("cornflowerblue","indianred")) + #specify custom colors
theme(legend.position="none")+  #remove the legend as it isn't needed
ggsave("faithpd.pdf", height=3, width=4, device="pdf") # save a PDF 3 inches by 4 inches
mymetadata<-
mymetadata %>%
left_join(faithpd)
mymetadata %>%
filter(!is.na(faithpd)) %>%
ggplot(aes(x=`Donor-status`, y=faith_pd, fill=`Donor-status`)) +
stat_summary(geom="bar", fun.data=mean_se, color="black") + #here black is the outline for the bars
coord_cartesian(ylim=c(3,17)) + # adjust y-axis
xlab("Four clinical groups") + facet_grid(~'Faith phylogenetic diversity')
ylab("Faith PD") +
theme_q2r() +
scale_fill_manual(values=c("cornflowerblue","indianred")) + #specify custom colors
theme(legend.position="none")+  #remove the legend as it isn't needed
ggsave("faithpd.pdf", height=3, width=4, device="pdf") # save a PDF 3 inches by 4 inches
View(mymetadata)
obsotu<-read_qza("qzv/alphadiversity/observed_otus_vector.qza")
obsotu<-obsotu$data %>% rownames_to_column("SampleID")
gplots::venn(list(metadata=mymetadata$SampleID, obsotu=obsotu$SampleID))
ggsave("obs otu", height=4, width=4, device = pdf)
mymetadata<-
mymetadata %>%
left_join(obsotu)
mymetadata %>%
filter(!is.na(obsotu))
mymetadata<-
mymetadata %>%
left_join(obsotu)
mymetadata %>%
filter(!is.na(obsotu)) %>%
ggplot(aes(x=`Donor-status`, y=observed_otus, fill=`Donor-status`)) +
stat_summary(geom="bar", fun.data=mean_se, color="black") + #here black is the outline for the bars
coord_cartesian(ylim=c(0,200)) + # adjust y-axis
xlab("Four clinical groups") + facet_grid(~'Observed OTUs') +
ylab("OTU's") +
theme_q2r() +
scale_fill_manual(values=c("cornflowerblue","indianred")) + #specify custom colors
theme(legend.position="none")+  #remove the legend as it isn't needed
ggsave("obsotu.pdf", height=3, width=4, device="pdf") # save a PDF 3 inches by 4 inches
mymetadata<-
mymetadata %>%
left_join(obsotu)
mymetadata %>%
filter(!is.na(obsotu)) %>%
ggplot(aes(x=`Donor-status`, y=observed_otus, fill=`Donor-status`)) +
stat_summary(geom="bar", fun.data=mean_se, color="black") + #here black is the outline for the bars
coord_cartesian(ylim=c(0,200)) + # adjust y-axis
xlab("Four clinical groups") + facet_grid(~'Observed OTUs')
ylab("OTU's") +
theme_q2r() +
scale_fill_manual(values=c("cornflowerblue","indianred")) + #specify custom colors
theme(legend.position="none")+  #remove the legend as it isn't needed
ggsave("obsotu.pdf", height=3, width=4, device="pdf") # save a PDF 3 inches by 4 inches
mymetadata<-
mymetadata %>%
left_join(obsotu)
mymetadata %>%
filter(!is.na(obsotu)) %>%
ggplot(aes(x=`Sample-Name`, y=observed_otus, fill=`Donor-status`)) +
stat_summary(geom=points, fun.data=mean_se, color="black") + #here black is the outline for the bars
coord_cartesian(ylim=c(0,200)) + # adjust y-axis
xlab("Four clinical groups") + facet_grid(~'DOnor-status')
ylab("OTU's") +
theme_q2r() +
scale_fill_manual(values=c("cornflowerblue","indianred")) + #specify custom colors
theme(legend.position="none")+  #remove the legend as it isn't needed
ggsave("obsotu.pdf", height=3, width=4, device="pdf") # save a PDF 3 inches by 4 inches
mymetadata<-
mymetadata %>%
left_join(obsotu)
mymetadata %>%
filter(!is.na(obsotu)) %>%
ggplot(aes(x=`Sample-Name`, y=observed_otus, fill=`Donor-status`)) +
stat_summary(geom_point, fun.data=mean_se, color="black") + #here black is the outline for the bars
coord_cartesian(ylim=c(0,200)) + # adjust y-axis
xlab("Four clinical groups") + facet_grid(~'DOnor-status')
ylab("OTU's") +
theme_q2r() +
scale_fill_manual(values=c("cornflowerblue","indianred")) + #specify custom colors
theme(legend.position="none")+  #remove the legend as it isn't needed
ggsave("obsotu.pdf", height=3, width=4, device="pdf") # save a PDF 3 inches by 4 inches
savehistory("~/Desktop/Results/Rhis.Rhistory")
mymetadata<-
mymetadata %>%
left_join(faithpd)
mymetadata %>%
filter(!is.na(faithpd)) %>%
ggplot(aes(x=`Donor-status`, y=faith_pd, fill=`Donor-status`)) +
stat_summary(geom="bar", fun.data=mean_se, color="black") + #here black is the outline for the bars
coord_cartesian(ylim=c(3,17)) + # adjust y-axis
xlab("Four clinical groups") + facet_grid(~'Faith phylogenetic diversity')
ylab("Faith PD") +
theme_q2r() +
scale_fill_manual(values=c("cornflowerblue","indianred")) + #specify custom colors
theme(legend.position="none")+  #remove the legend as it isn't needed
ggsave("faithpd.pdf", height=3, width=4, device="pdf") # save a PDF 3 inches by 4 inches
uwunifrac$data$Vectors %>%
select(SampleID, PC1, PC2) %>%
left_join(mymetadata) %>%
ggplot(aes(x=PC1, y=PC2, color=`Donor-status`)) +
geom_point(alpha=0.5) + #alpha controls transparency and helps when points are overlapping
theme_q2r() +
scale_color_discrete(name="Donor-status")
uwunifrac$data$Vectors %>%
select(SampleID, PC1, PC2) %>%
left_join(mymetadata) %>%
ggplot(aes(x=PC1, y=PC2, color=`Donor-status`)) +
geom_point(alpha=0.5) + #alpha controls transparency and helps when points are overlapping
theme_q2r() + facet_grid(~'Unweighted unifrac')
scale_color_discrete(name="Donor-status")
ggsave("unweightedPCoA.pdf", height=4, width=5, device="pdf") # save a PDF 3 inches by 4 inches
Brays<-read_qza("qzv/betadiversity/bray_curtis_pcoa_results.qza")
Brays$data$Vectors %>%
select(SampleID, PC1, PC2) %>%
left_join(mymetadata) %>%
ggplot(aes(x=PC1, y=PC2, color=`Donor-status`)) +
geom_point(alpha=0.5) + #alpha controls transparency and helps when points are overlapping
theme_q2r() + facet_grid(~'Bray Curtis')
scale_color_discrete(name="Donor-status")
ggsave("Braycurtis.pdf", height=4, width=5, device="pdf") # save a PDF 3 inches by 4 inches
jaccard<-read_qza("qzv/betadiversity/jaccard_pcoa_results.qza")
jaccard$data$Vectors %>%
select(SampleID, PC1, PC2) %>%
left_join(mymetadata) %>%
ggplot(aes(x=PC1, y=PC2, color=`Donor-status`)) +
geom_point(alpha=0.5) + #alpha controls transparency and helps when points are overlapping
theme_q2r() + facet_grid(~'Jaccard')
scale_color_discrete(name="Donor-status")
ggsave("jaccard.pdf", height=4, width=5, device="pdf") # save a PDF 3 inches by 4 inches
uwunifrac<-read_qza("qzv/betadiversity/unweighted_unifrac_pcoa_results.qza")
uwunifrac$data$Vectors %>%
select(SampleID, PC1, PC2) %>%
left_join(mymetadata) %>%
ggplot(aes(x=PC1, y=PC2, color=`Donor-status`)) +
geom_point(alpha=0.5) + #alpha controls transparency and helps when points are overlapping
theme_q2r() + facet_grid(~'Unweighted unifrac')
scale_color_discrete(name="Donor-status")
ggsave("unweightedPCoA.pdf", height=4, width=5, device="pdf") # save a PDF 3 inches by 4 inches
wunifrac<-read_qza("qzv/betadiversity/weighted_unifrac_pcoa_results.qza")
wunifrac$data$Vectors %>%
select(SampleID, PC1, PC2) %>%
left_join(mymetadata) %>%
ggplot(aes(x=PC1, y=PC2, color=`Donor-status`)) +
geom_point(alpha=0.5) + #alpha controls transparency and helps when points are overlapping
theme_q2r() + facet_grid(~'Weighted unifrac')
scale_color_discrete(name="Donor-status")
ggsave("WeightedPCoA.pdf", height=4, width=5, device="pdf") # save a PDF 3 inches by 4 inches
Brays<-read_qza("qzv/betadiversity/bray_curtis_pcoa_results.qza")
Brays$data$Vectors %>%
select(SampleID, PC1, PC2) %>%
left_join(mymetadata) %>%
ggplot(aes(x=PC1, y=PC2, color=`Donor-status`)) +
geom_point(alpha=0.5) + #alpha controls transparency and helps when points are overlapping
theme_q2r() + facet_grid(~'Bray Curtis')
scale_color_discrete(name="Donor-status")
ggsave("Braycurtis.pdf", height=4, width=5, device="pdf") # save a PDF 3 inches by 4 inches
mymetadata<-
mymetadata %>%
left_join(shannon)
mymetadata %>%
filter(!is.na(shannon)) %>%
ggplot(aes(x=`Donor-status`, y=shannon, fill=`Donor-status`)) +
stat_summary(geom="bar", fun.data=mean_se, color="black") + #here black is the outline for the bars
coord_cartesian(ylim=c(2,7)) + # adjust y-axis
xlab("Four clinical groups") +   facet_grid(~'Shannon diversity index')
ylab("Shannon Diversity") +
theme_q2r() +
scale_fill_manual(values=c("cornflowerblue","indianred")) + #specify custom colors
theme(legend.position="none") +  #remove the legend as it isn't needed
ggsave("Shannon_diversity.pdf", height=3, width=4, device="pdf") # save a PDF 3 inches by 4 inches
sv<-read_qza("qzv/table-with-k-no-mitochondria-n0-chloroplast.qza")$data
taxonomy<-read_qza("taxonomy.qza")$data %>% parse_taxonomy()
taxasumsgenus<-summarize_taxa(sv, taxonomy)$Genus
taxa_heatmap(taxasumsgenus, mymetadata, "Donor-status")
ggsave("heatmapgenus", height=4, width=8, device="pdf") # save a PDF 4 inches by 8 inches
taxasumsPhylum<-summarize_taxa(sv, taxonomy)$Phylum
taxa_heatmap(taxasumsPhylum, mymetadata, "Donor-status")
ggsave("heatmapPhylum", height=4, width=8, device="pdf") # save a PDF 4 inches by 8 inches
taxasumsSpecies<-summarize_taxa(sv, taxonomy)$Species
taxa_heatmap(taxasumsSpecies, mymetadata, "Donor-status")
ggsave("heatmapSpecies", height=4, width=8, device="pdf") # save a PDF 4 inches by 8 inches
View(SVs)
library(devtools)
library(dbplyr)
library(phyloseq)
library(cooccurNet)
library(vegan)
install.packages("randomForest")
library(randomForest)
library(randomForest)
library(gridExtra)
library(data.table)
library(data.table)
install.packages("fso")
library(fso)
install.packages("WGCNA")
library(WGCNA)
library(igraph)
install_github("umerijaz/microbiomeSeq")  # Install the package
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2")
BiocManager::install("DESeq2")
BiocManager::install("DESeq2")
library(DESeq2)
install_github("umerijaz/microbiomeSeq")  # Install the package
install.packages("adespatial")
library(devtools)
install_github("umerijaz/microbiomeSeq")
install_github("umerijaz/microbiomeSeq")
install_github("umerijaz/microbiomeSeq")
install_github("umerijaz/microbiomeSeq")
library(adespatial)
library(devtools)
install_github("umerijaz/microbiomeSeq")
devtools::install_github("umerijaz/microbiomeSeq")
library(devtools)
devtools::install_github("umerijaz/microbiomeSeq") 3
devtools::install_github("umerijaz/microbiomeSeq")
3
3
devtools::install_github("umerijaz/microbiomeSeq")
detach("package:adespatial", unload = TRUE)
uninstall("adespatial")
library(adespatial)
library(adespatial)
uninstall("adespatial")
install_github("umerijaz/microbiomeSeq")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("impute")
library(impute)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("preprocessCore")
library(preprocessCore)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("GO.db")
library(GO.db)
install_github("umerijaz/microbiomeSeq")
install.packages("adespatial")
library(devtools)
install_github("umerijaz/microbiomeSeq")
install_github("umerijaz/microbiomeSeq")
savehistory("~/Desktop/Results/Rhistory.Rhistory")
